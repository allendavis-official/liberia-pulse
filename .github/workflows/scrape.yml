name: 🎵 Scrape Audiomack Data

on:
  schedule:
    # Run daily at 2 AM UTC (9 PM EST / 6 PM PST)
    - cron: "0 2 * * *"

  # Allow manual trigger from GitHub Actions tab
  workflow_dispatch:

jobs:
  scrape-and-update:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 🐍 Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: 📦 Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4 pandas playwright

      - name: Install Playwright Browsers
        run: playwright install --with-deps

      - name: 🎵 Run Audiomack scraper
        run: |
          echo "Starting scraper at $(date)"
          python audiomack_scraper_v5.py
          echo "Scraper completed at $(date)"

      - name: 📋 Update "latest" CSV files
        run: |
          echo "Updating latest files..."

          # Find the most recent artist file (excluding "latest")
          LATEST_ARTIST=$(ls -t data/audiomack_artists_*.csv 2>/dev/null | grep -v latest | head -1)

          # Find the most recent tracks file (excluding "latest")
          LATEST_TRACK=$(ls -t data/audiomack_tracks_*.csv 2>/dev/null | grep -v latest | head -1)

          # Copy to "latest" versions
          if [ -n "$LATEST_ARTIST" ]; then
            cp "$LATEST_ARTIST" data/audiomack_artists_latest.csv
            echo "✅ Updated audiomack_artists_latest.csv from $(basename $LATEST_ARTIST)"
          else
            echo "⚠️  No artist files found"
          fi

          if [ -n "$LATEST_TRACK" ]; then
            cp "$LATEST_TRACK" data/audiomack_tracks_latest.csv
            echo "✅ Updated audiomack_tracks_latest.csv from $(basename $LATEST_TRACK)"
          else
            echo "⚠️  No track files found"
          fi

          # Optional: Keep only last 30 days of timestamped files to save space
          find data -name "audiomack_*.csv" -type f -mtime +30 ! -name "*latest*" -delete 2>/dev/null || true
          echo "🧹 Cleaned up old files (>30 days)"

      - name: 📊 Check if data changed
        id: check_changes
        run: |
          if [[ -n $(git status --porcelain data/) ]]; then
            echo "changes=true" >> $GITHUB_OUTPUT
            echo "✅ New data detected"
          else
            echo "changes=false" >> $GITHUB_OUTPUT
            echo "ℹ️ No changes in data"
          fi

      - name: 💾 Commit and push if changed
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          git config --global user.name 'Liberian Pulse Bot'
          git config --global user.email 'bot@liberianpulse.com'
          git add data/*.csv
          git commit -m "🤖 Auto-update data: $(date +'%Y-%m-%d %H:%M UTC')"
          git push

      - name: ✅ Summary
        run: |
          if [[ "${{ steps.check_changes.outputs.changes }}" == "true" ]]; then
            echo "✅ Data updated and pushed to repository"
          else
            echo "ℹ️ No updates needed - data unchanged"
          fi

      # Optional: Send notification on failure
      - name: 📧 Notify on failure
        if: failure()
        run: |
          echo "❌ Scraper failed at $(date)"
          # Add email notification or Slack webhook here
